AWSTemplateFormatVersion: '2010-09-09'
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute

  PythonFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GetItem
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt LambdaRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3
          import os
          dynamodb = boto3.client('dynamodb')

          def handler(event, context):
            # Read table name from function environment
            from_table = os.environ['TABLE_NAME']
            
            # Read item id from input event
            item_id = event['item_id']
            
            # Fetch database item with item id
            result = dynamodb.get_item(
                TableName=from_table,
                Key={ "id": {"S": item_id} }
            )

            return json.dumps(result["Item"])
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: my-table
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
